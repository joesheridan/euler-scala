/*
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their
difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their
sum and difference are pentagonal and D = |Pk − Pj| is minimised;
what is the value of D?
2y = n(3n−1)
n^2 - n/3 = 2y/3
x^2 + 1/36 - n/3
(x - 1/6)^2 = (2y)/3 - 1/36

 */

def isPentagonal(n: Int): Boolean = {
  val y = getPn(n)
  Math.floor(y) == y
}

def getPn(n: Int): Double = {
  val a = ((2 * n).toDouble / 3) + (1.toDouble/36)
  1.toDouble/6 + Math.sqrt(a)
}

isPentagonal(51)
isPentagonal(50)

def getPentagon(n: Int) : Int = {
  (n * ((3*n) -1) ) / 2
}

def getPentagons(lim: Int): List[Int] = {
  (1 to lim).map(getPentagon(_)).toList
}

def isSDPentagonal(i: Int, j: Int): Boolean = {
  isPentagonal(i + j) && isPentagonal(Math.abs(i - j))
}

val lim = 100000
val pentagons = getPentagons(lim)
val l = for( i <- pentagons; j <- pentagons if i < j && isSDPentagonal(i, j))
  yield (i, j, j - i)
